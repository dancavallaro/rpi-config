- name: Bootstrap host
  hosts: all
  tasks:
    - name: Sanity check
      ansible.builtin.ping:
    - name: Install apt packages
      become: true
      ansible.builtin.apt:
        update_cache: yes
        pkg:
          - vim
          - curl
          - unzip
          - ca-certificates
          - lm-sensors
          - jq
          - sqlite3
          - rsyslog
    - name: Install .vimrc
      ansible.builtin.copy:
        src: ../dotfiles/vimrc
        dest: ~/.vimrc
    - name: Install .gitconfig
      ansible.builtin.copy:
        src: ../dotfiles/gitconfig
        dest: ~/.gitconfig
    - name: Copy scripts
      become: true
      ansible.builtin.copy:
        src: ../bin
        dest: /usr/local/rpi-config
        mode: '755'
    - name: Install AWS CLI
      become: true
      ansible.builtin.script: scripts/install-aws-cli
      register: result
      failed_when: "'already installed' not in result.stdout"
      changed_when: "result.rc == 0"
    - name: Install Docker
      become: true
      ansible.builtin.script: scripts/install-docker
      register: result
      failed_when: "'already installed' not in result.stdout"
      changed_when: "result.rc == 0"
    - name: Add my user to docker group
      become: true
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: true
    - name: Install Loki Docker driver
      ansible.builtin.command: "docker plugin install grafana/loki-docker-driver:3.5.0-{{ arch }} --alias loki --grant-all-permissions"
      register: result
      failed_when: "result.rc != 0 and 'plugin loki:latest already exists' not in result.stderr"
      changed_when: "result.rc == 0"
    - name: Install Docker daemon config with Loki logging
      become: true
      register: docker_config
      ansible.builtin.copy:
        src: files/etc/docker/daemon.json
        dest: /etc/docker/daemon.json
    - name: Restart dockerd
      become: true
      when: docker_config.changed
      ansible.builtin.systemd_service:
        name: docker
        state: restarted
    - name: Copy Docker config files
      become: true
      ansible.builtin.copy:
        src: ../docker
        dest: /usr/local/rpi-config/
    - name: Determine Docker group ID
      ansible.builtin.command:
        cmd: stat -c '%g' /var/run/docker.sock
      register: docker_gid
    - name: Render Docker compose file
      become: true
      ansible.builtin.template:
        src: ../docker/compose.yml
        dest: /usr/local/rpi-config/docker/compose.yml
    - name: Launch containers
      ansible.builtin.command: docker compose -f /usr/local/rpi-config/docker/compose.yml up -d
    - name: Create journald drop-in directory
      become: true
      ansible.builtin.file:
        path: /etc/systemd/journald.conf.d
        state: directory
        mode: '0755'
    - name: Install journald config
      become: true
      ansible.builtin.copy:
        src: files/etc/journald.conf
        dest: /etc/systemd/journald.conf.d/override.conf
        owner: root
        group: root
      notify: Restart journald
    - name: Install rsyslog config
      become: true
      ansible.builtin.copy:
        src: files/etc/rsyslog.conf
        dest: /etc/rsyslog.conf
        owner: root
        group: root
      notify: Restart rsyslog
  handlers:
    - name: Restart rsyslog
      become: true
      ansible.builtin.systemd_service:
        name: rsyslog
        state: restarted
    - name: Restart journald
      become: true
      ansible.builtin.systemd_service:
        name: systemd-journald
        state: restarted
