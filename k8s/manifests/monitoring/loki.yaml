apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-conf
  namespace: monitoring
data:
  config.yaml: |-
    target: all
    auth_enabled: false
    server:
      log_level: warn
    schema_config:
      configs:
        - from: 2025-04-01
          store: tsdb
          object_store: filesystem
          schema: v13
          index:
            prefix: index_
            period: 24h
    common:
      ring:
        kvstore:
          store: inmemory
      replication_factor: 1
      path_prefix: /loki
      storage:
        object_store:
          filesystem:
            dir: /loki/thanos
    limits_config:
      max_query_length: 0
      # Don't enforce automatic retention (only enabled for deletion)
      retention_period: "0s"
      deletion_mode: filter-and-delete
    compactor:
      # Retention (deletion) doesn't work correctly with the Thanos object client and filesystem
      # storage, because it doesn't enter this block: https://github.com/grafana/loki/blob/main/pkg/compactor/compactor.go#L348-L350.
      # The chunk files are base64-encoded because the Thanos chunk client is using the
      # FSEncoder, so the compactor can't find them without using the FSEncoder.
      retention_enabled: false
      retention_delete_delay: "1h"
      delete_request_cancel_period: "1m"
      compaction_interval: "10m"
      delete_request_store: filesystem
    storage_config:
      use_thanos_objstore: true
    ruler_storage:
      backend: filesystem
      filesystem:
        dir: /loki/ruler
    ruler:
      enable_api: true
      alertmanager_url: http://alertmanager.monitoring
      # This block is ignored! The ruler_storage block above overrides this now that
      # the Thanos client is enabled, but this block needs to still exist (and be valid)
      # because of this stupid bug: https://github.com/grafana/loki/issues/16543
      storage:
        type: local
        local:
          directory: /tmp
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-data
  namespace: monitoring
spec:
  storageClassName: local-path-v2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:3.4.2
          args:
            - -config.file=/etc/loki/config.yaml
          ports:
            - name: http
              containerPort: 3100
          volumeMounts:
            - name: loki-conf
              mountPath: /etc/loki
              readOnly: true
            - name: loki-data
              mountPath: /loki
              readOnly: false
      volumes:
        - name: loki-conf
          configMap:
            name: loki-conf
            optional: false
        - name: loki-data
          persistentVolumeClaim:
            claimName: loki-data
---
apiVersion: v1
kind: Service
metadata:
  name: loki-http
  namespace: monitoring
  annotations:
    "coredns.io/hostname": loki.o.cavnet.cloud
spec:
  type: LoadBalancer
  selector:
    app: loki
  ports:
    - port: 80
      targetPort: http
