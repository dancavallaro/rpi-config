declare "cluster_events" {
  argument "logs_destinations" {
    comment = "Must be a list of log destinations where collected logs should be forwarded to"
  }

  loki.source.kubernetes_events "cluster_events" {
    log_format = "logfmt"
    forward_to = [loki.process.cluster_events.receiver]
  }

  loki.process "cluster_events" {
    stage.static_labels {
      values = {
        "service_name" = "kubernetes.cluster_events",
      }
    }

    stage.logfmt {
      mapping = {
        "component" = "sourcecomponent",
        "kind" = "",
        "type" = "",
        "name" = "",
        "node" = "sourcehost",
      }
    }

    stage.labels {
      values = {
        "component" = "",
        "kind" = "",
        "type" = "",
        "name" = "",
        "node" = "",
      }
    }

    // if kind=Node, set the node label by copying the instance label
    stage.match {
      selector = "{kind=\"Node\"}"

      stage.labels {
        values = {
          "node" = "name",
        }
      }
    }

    stage.label_drop {
      values = ["instance"]
    }

    forward_to = argument.logs_destinations.value
  }
}

cluster_events "feature" {
  logs_destinations = [
    //loki.echo.echo.receiver,
    loki.write.loki.receiver,
  ]
}
