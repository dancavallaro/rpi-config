declare "cluster_metrics" {
  argument "metrics_destinations" {
    comment = "Must be a list of metric destinations where collected metrics should be forwarded to"
  }

  discovery.kubernetes "apiserver" {
    role = "endpoints"

    selectors {
      role = "endpoints"
      field = "metadata.name=kubernetes"
    }

    namespaces {
      names = ["default"]
    }
  }

  discovery.relabel "apiserver" {
    targets = discovery.kubernetes.apiserver.targets

    rule {
      source_labels = ["__meta_kubernetes_endpoint_port_name"]
      regex = "https"
      action = "keep"
    }

    rule {
      source_labels = ["__meta_kubernetes_namespace"]
      target_label = "namespace"
    }

    rule {
      source_labels = ["__meta_kubernetes_service_name"]
      target_label = "service"
    }

    rule {
      replacement = "kubernetes"
      target_label = "source"
    }
  }

  prometheus.scrape "apiserver" {
    targets = discovery.relabel.apiserver.output
    job_name = "integrations/kubernetes/kube-apiserver"
    scheme = "https"
    scrape_interval = "60s"
    bearer_token_file = "/var/run/secrets/kubernetes.io/serviceaccount/token"

    tls_config {
      ca_file = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
      insecure_skip_verify = false
      server_name = "kubernetes"
    }

    forward_to = argument.metrics_destinations.value
  }
}

cluster_metrics "feature" {
  metrics_destinations = [
    prometheus.remote_write.metrics.receiver,
  ]
}
