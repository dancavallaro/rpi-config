apiVersion: v1
kind: Namespace
metadata:
  name: unifi
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: unifi
  name: unifi-app-config
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: unifi
  name: unifi-app
spec:
  selector:
    matchLabels:
      app: unifi-app
  replicas: 1
  template:
    metadata:
      labels:
        app: unifi-app
    spec:
      nodeSelector:
        network: dtcnet
      hostNetwork: true
      # Otherwise it won't be able to resolve the DB service DNS name
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: unifi-network-app
          image: lscr.io/linuxserver/unifi-network-application:9.0.108
          imagePullPolicy: Always
          env:
            - name: TZ
              value: America/New_York
            - name: MONGO_HOST
              value: unifi-db.unifi
            - name: MONGO_PORT
              value: "27017"
            - name: MONGO_DBNAME
              value: unifi
            - name: MONGO_AUTHSOURCE
              value: admin
            - name: MONGO_USER
              value: unifi
            - name: MONGO_PASS
              value: unifi
          volumeMounts:
            - name: unifi-app-config
              mountPath: /config
          ports:
            - containerPort: 8080
            - containerPort: 8443
            - containerPort: 8843
            - containerPort: 8880
            - containerPort: 6789
            - containerPort: 3478
              protocol: UDP
            - containerPort: 10001
              protocol: UDP
            - containerPort: 1900
              protocol: UDP
            - containerPort: 5514
              protocol: UDP
          resources:
            requests:
              memory: "1G"
              cpu: "0.25"
            limits:
              memory: "1G"
              cpu: "0.25"
      volumes:
        - name: unifi-app-config
          persistentVolumeClaim:
            claimName: unifi-app-config
---
apiVersion: v1
kind: Service
metadata:
  namespace: unifi
  name: unifi-app
spec:
  selector:
    app: unifi-app
  ports:
    # The Unifi app insists on using TLS and doing its own port 80->443 redirect, so
    # only expose port 443, and then let the Nginx proxy expose plain HTTP on port
    # 80 to the Cilium gateway.
    - name: https
      targetPort: 8443
      port: 443
